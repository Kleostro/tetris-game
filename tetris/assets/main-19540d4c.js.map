{"version":3,"file":"main-19540d4c.js","sources":["../../src/js/figures.js","../../src/js/utilitis.js","../../src/js/Tetris.js","../../main.js"],"sourcesContent":["const TETROMINOES = {\n  I: [\n    [0, 0, 0, 0],\n    [1, 1, 1, 1],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ],\n  J: [\n    [1, 0, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  L: [\n    [0, 0, 1],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  O: [\n    [1, 1],\n    [1, 1],\n    [0, 0],\n  ],\n  S: [\n    [0, 1, 1],\n    [1, 1, 0],\n    [0, 0, 0],\n  ],\n  Z: [\n    [1, 1, 0],\n    [0, 1, 1],\n    [0, 0, 0],\n  ],\n  T: [\n    [0, 1, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n};\n\nexport default TETROMINOES;\n","export const PLAYFIELD_ROWS = 20;\nexport const PLAYFIELD_COLUMNS = 10;\nexport const TETROMINO_NAMES = ['I', 'J', 'L', 'O', 'S', 'Z', 'T'];\n\nexport const getRandomElement = (arr) => {\n  const randomIndex = Math.floor(Math.random() * arr.length);\n  return arr[randomIndex];\n};\n\nexport const convertPositionIndex = (row, column) => row * PLAYFIELD_COLUMNS + column;\n\nexport function rotateMatrix(matrix) {\n  const matrixLen = matrix.length;\n  const rotatedMatrix = [];\n  for (let i = 0; i < matrixLen; i += 1) {\n    rotatedMatrix[i] = [];\n    for (let j = 0; j < matrixLen; j += 1) {\n      rotatedMatrix[i][j] = matrix[matrixLen - j - 1][i];\n    }\n  }\n  return rotatedMatrix;\n}\n\nexport const SAD = [\n  [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\n  [0, 1, 0, 0, 0, 0, 0, 0, 1, 0],\n  [1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n  [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\n  [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\n  [0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 1, 1, 1, 1, 0, 0, 0],\n  [0, 0, 1, 0, 0, 0, 0, 1, 0, 0],\n  [0, 1, 0, 0, 0, 0, 0, 0, 1, 0],\n];\n","/* eslint-disable no-continue */\nimport TETROMINOES from './figures';\nimport {\n  PLAYFIELD_COLUMNS, PLAYFIELD_ROWS, TETROMINO_NAMES, getRandomElement, rotateMatrix,\n} from './utilitis';\n\nexport class Tetris {\n  constructor() {\n    this.playField = undefined;\n    this.tetromino = undefined;\n    this.isGameOver = false;\n    this.init();\n  }\n\n  init() {\n    this.generatePlayField();\n    this.generateTetromino();\n  }\n\n  generatePlayField() {\n    this.playField = new Array(PLAYFIELD_ROWS).fill()\n      .map(() => new Array(PLAYFIELD_COLUMNS).fill(0));\n  }\n\n  generateTetromino() {\n    const name = getRandomElement(TETROMINO_NAMES);\n    const matrix = TETROMINOES[name];\n\n    const column = PLAYFIELD_COLUMNS / 2 - Math.floor(matrix.length / 2);\n    const row = -2;\n\n    this.tetromino = {\n      name,\n      matrix,\n      row,\n      column,\n      ghostRow: row,\n      ghostColumn: column,\n    };\n\n    this.calculateGhostPosition();\n  }\n\n  moveTetrominoDown() {\n    this.tetromino.row += 1;\n    if (!this.isValid()) {\n      this.tetromino.row -= 1;\n      this.placeTetromino();\n    }\n  }\n\n  moveTetrominoLeft() {\n    this.tetromino.column -= 1;\n    if (!this.isValid()) this.tetromino.column += 1;\n    else {\n      this.calculateGhostPosition();\n    }\n  }\n\n  moveTetrominoRight() {\n    this.tetromino.column += 1;\n    if (!this.isValid()) this.tetromino.column -= 1;\n    else {\n      this.calculateGhostPosition();\n    }\n  }\n\n  rotateTetrominoMatrix() {\n    const oldMatrix = this.tetromino.matrix;\n    const rotatedMatrix = rotateMatrix(this.tetromino.matrix);\n    this.tetromino.matrix = rotatedMatrix;\n    if (!this.isValid()) this.tetromino.matrix = oldMatrix;\n    else {\n      this.calculateGhostPosition();\n    }\n  }\n\n  dropTetrominoDown() {\n    this.tetromino.row = this.tetromino.ghostRow;\n    this.placeTetromino();\n  }\n\n  isValid() {\n    const matrixSize = this.tetromino.matrix.length;\n    for (let row = 0; row < matrixSize; row += 1) {\n      for (let column = 0; column < matrixSize; column += 1) {\n        if (!this.tetromino.matrix[row][column]) continue;\n        if (this.isOutsideGameBoard(row, column)) return false;\n        if (this.isCollides(row, column)) return false;\n      }\n    }\n    return true;\n  }\n\n  isOutsideGameBoard(row, column) {\n    return this.tetromino.column + column < 0\n      || this.tetromino.column + column >= PLAYFIELD_COLUMNS\n      || this.tetromino.row + row >= this.playField.length;\n  }\n\n  isCollides(row, column) {\n    return this.playField[this.tetromino.row + row]?.[this.tetromino.column + column];\n  }\n\n  placeTetromino() {\n    const matrixSize = this.tetromino.matrix.length;\n    for (let row = 0; row < matrixSize; row += 1) {\n      for (let column = 0; column < matrixSize; column += 1) {\n        if (!this.tetromino.matrix[row][column]) continue;\n        if (this.isOutsideTopBoard(row)) return this.isGameOver = true;\n\n        this.playField[this.tetromino.row + row][this.tetromino.column + column] = this.tetromino.name;\n      }\n    }\n    this.processFilledRows();\n    this.generateTetromino();\n  }\n\n  isOutsideTopBoard(row) {\n    return this.tetromino.row + row < 0;\n  }\n\n  processFilledRows() {\n    const filledRows = this.findFilledRows();\n    this.removeFilledRows(filledRows);\n  }\n\n  findFilledRows() {\n    const filledRows = [];\n    for (let row = 0; row < PLAYFIELD_ROWS; row += 1) {\n      if (this.playField[row].every((cell) => Boolean(cell))) {\n        filledRows.push(row);\n      }\n    }\n    return filledRows;\n  }\n\n  removeFilledRows(filledRows) {\n    filledRows.forEach((row) => {\n      this.dropRowsAbove(row);\n    })\n  }\n\n  dropRowsAbove(rowToDelete) {\n    for (let row = rowToDelete; row > 0; row -= 1) {\n      this.playField[row] = this.playField[row - 1];\n    }\n    this.playField[0] = new Array(PLAYFIELD_COLUMNS).fill(0);\n  }\n\n  calculateGhostPosition() {\n    const tetrominoRow = this.tetromino.row;\n    this.tetromino.row += 1;\n\n    while (this.isValid()) this.tetromino.row += 1;\n\n    this.tetromino.ghostRow = this.tetromino.row - 1;\n    this.tetromino.ghostColumn = this.tetromino.column;\n    this.tetromino.row = tetrominoRow;\n  }\n}\n","/* eslint-disable no-continue */\nimport { Tetris } from './src/js/Tetris';\nimport {\n  PLAYFIELD_COLUMNS, PLAYFIELD_ROWS, SAD, convertPositionIndex,\n} from './src/js/utilitis';\nimport './style.scss';\n\nlet tetris = new Tetris();\nconst cells = document.querySelectorAll('[data-grid=\"grid__cell\"]');\n\nlet requestID;\nlet timeOutID;\nlet hammer;\n\nconst drawTetromino = () => {\n  const { name } = tetris.tetromino;\n  const tetrominoMatrixSize = tetris.tetromino.matrix.length;\n\n  for (let row = 0; row < tetrominoMatrixSize; row += 1) {\n    for (let column = 0; column < tetrominoMatrixSize; column += 1) {\n      if (!tetris.tetromino.matrix[row][column]) continue;\n      if (tetris.tetromino.row + row < 0) continue;\n      const cellIndex = convertPositionIndex(tetris.tetromino.row\n        + row, tetris.tetromino.column + column);\n      cells[cellIndex].classList.add(name);\n    }\n  }\n};\n\nconst drawPlayField = () => {\n  for (let row = 0; row < PLAYFIELD_ROWS; row += 1) {\n    for (let column = 0; column < PLAYFIELD_COLUMNS; column += 1) {\n      if (!tetris.playField[row][column]) continue;\n      const name = tetris.playField[row][column];\n      const cellIndex = convertPositionIndex(row, column);\n      cells[cellIndex].classList.add(name);\n    }\n  }\n};\n\nconst drawGhostTetromino = () => {\n  const tetrominoMatrixSize = tetris.tetromino.matrix.length;\n  for (let row = 0; row < tetrominoMatrixSize; row += 1) {\n    for (let column = 0; column < tetrominoMatrixSize; column += 1) {\n      if (!tetris.tetromino.matrix[row][column]) continue;\n      if (tetris.tetromino.ghostRow + row < 0) continue;\n      const cellIndex = convertPositionIndex(tetris.tetromino.ghostRow\n        + row, tetris.tetromino.ghostColumn + column);\n      cells[cellIndex].classList.add('ghost');\n    }\n  }\n};\n\nconst draw = () => {\n  cells.forEach((cell) => cell.removeAttribute('class'));\n  drawPlayField();\n  drawTetromino();\n  drawGhostTetromino();\n};\n\nconst startLoop = () => {\n  timeOutID = setTimeout(() => requestID = requestAnimationFrame(moveDown), 500);\n};\n\nconst stopLoop = () => {\n  cancelAnimationFrame(requestID);\n  clearTimeout(timeOutID);\n};\n\nconst rotate = () => {\n  tetris.rotateTetrominoMatrix();\n  draw();\n};\n\nconst drawSad = () => {\n  const TOP_OFFSET = 5;\n  for (let row = 0; row < SAD.length; row += 1) {\n    for (let column = 0; column < SAD[0].length; column += 1) {\n      if (!SAD[row][column]) continue;\n      const cellIndex = convertPositionIndex(TOP_OFFSET + row, column);\n      cells[cellIndex].classList.add('sad');\n    }\n  }\n};\n\nconst gameOverAnimation = () => {\n  const filledCells = [...cells].filter((cell) => cell.classList.length > 0);\n  filledCells.forEach((filledCell, i) => {\n    setTimeout(() => filledCell.classList.add('hide'), i * 10);\n    setTimeout(() => filledCell.removeAttribute('class'), i * 10 + 500);\n    setTimeout(drawSad, filledCells.length * 10 + 1000);\n  });\n};\n\nconst gameOver = () => {\n  stopLoop();\n  document.removeEventListener('keydown', onKeyDown);\n  hammer.off('panstart panleft panright pandown swipedown tap');\n  gameOverAnimation();\n\n  setTimeout(() => {\n    tetris = new Tetris();\n    initKeyDown();\n    initTouch();\n    startLoop();\n  }, 5000);\n};\n\nconst moveDown = () => {\n  tetris.moveTetrominoDown();\n  draw();\n  stopLoop();\n  startLoop();\n\n  if (tetris.isGameOver) gameOver();\n};\n\nconst moveLeft = () => {\n  tetris.moveTetrominoLeft();\n  draw();\n};\n\nconst moveRight = () => {\n  tetris.moveTetrominoRight();\n  draw();\n};\n\nconst dropDown = () => {\n  tetris.dropTetrominoDown();\n  draw();\n  stopLoop();\n  startLoop();\n\n  if (tetris.isGameOver) {\n    gameOver();\n  }\n};\n\nconst onKeyDown = (event) => {\n  switch (event.key) {\n    case 'ArrowUp':\n      rotate();\n      break;\n    case 'w':\n      rotate();\n      break;\n    case 'ArrowDown':\n      moveDown();\n      break;\n    case 's':\n      moveDown();\n      break;\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n    case 'a':\n      moveLeft();\n      break;\n    case 'ArrowRight':\n      moveRight();\n      break;\n    case 'd':\n      moveRight();\n      break;\n    case ' ':\n      dropDown();\n      break;\n    default:\n      break;\n  }\n};\n\nconst initKeyDown = () => {\n  document.addEventListener('keydown', onKeyDown);\n};\n\nconst initTouch = () => {\n  document.addEventListener('dblclick', (event) => {\n    event.preventDefault();\n  });\n\n  hammer = new Hammer(document.querySelector('body'));\n  hammer.get('pan').set({ direction: Hammer.DIRECTION_ALL });\n  hammer.get('swipe').set({ direction: Hammer.DIRECTION_ALL });\n\n  const threshold = 30;\n  let deltaX = 0;\n  let deltaY = 0;\n\n  hammer.on('panstart', () => {\n    deltaX = 0;\n    deltaY = 0;\n  });\n\n  hammer.on('panleft', (event) => {\n    if (Math.abs(event.deltaX - deltaX) > threshold) {\n      moveLeft();\n      deltaX = event.deltaX;\n      deltaY = event.deltaY;\n    }\n  });\n\n  hammer.on('panright', (event) => {\n    if (Math.abs(event.deltaX - deltaX) > threshold) {\n      moveRight();\n      deltaX = event.deltaX;\n      deltaY = event.deltaY;\n    }\n  });\n\n  hammer.on('pandown', (event) => {\n    if (Math.abs(event.deltaY - deltaY) > threshold) {\n      moveDown();\n      deltaX = event.deltaX;\n      deltaY = event.deltaY;\n    }\n  });\n\n  hammer.on('swipedown', () => {\n    dropDown();\n  });\n\n  hammer.on('tap', () => {\n    rotate();\n  });\n};\n\ninitKeyDown();\ninitTouch();\nmoveDown();\n"],"names":[],"mappings":"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"}